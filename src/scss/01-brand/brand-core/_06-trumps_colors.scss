@mixin makeColorHelpers($color, $value, $contrast-value) {
	$contrast-color: if($contrast-value = false, $contrast-value, true);

	%u-#{$color} {
		@include suffixcate {
			color: unquote($value);
		}
    }

	.u-#{$color}, .u-color-#{$color}, .u-#{$color}-before:before, .u-color-#{$color}-before:before, .u-#{$color}-after:after, .u-color-#{$color}-after:after {
		@include suffixcate {
			color: unquote($value);
		}
    }

    %u-#{$color}-bg {
    	@include suffixcate {
			background-color: unquote($value);
		}
    }

    .u-#{$color}-bg, .u-color-#{$color}-bg, .u-bg-#{$color}, .u-#{$color}-bg-before:before, .u-color-#{$color}-bg-before:before, .u-#{$color}-bg-after:after, .u-color-#{$color}-bg-after:after {
    	@include suffixcate {
	        background-color: unquote($value);
		}
    }

    .u-#{$color}-bg {
    	@include suffixcate {
			@if ($contrast-color != false) {
				color: unquote($contrast-color);
			}
		}
    }
}

@each $color, $values in $palette {
	@if (length($values) > 1) {
		@include makeColorHelpers($color, nth($values, 1), nth($values, 2));
	} @else {
		@include makeColorHelpers($color, nth($values, 1), false);
	}
}



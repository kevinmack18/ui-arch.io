/*
---
name: Space Sections
category: 6. Trumps > Spacing Units
---

Space sections next to eachother using `padding`, can be applied to all elements

*  Contains [Suffixcate](/#suffixcate) options (`@small` and `@large` suffixes) for `Default`, `Fixed`, `Large`, and `Large (fixed)`.

Versions:
* Default - Default unit (`$default-space`) above `$bp-space` and .5 the default unit (`$default-space` * .5) below `$bp-space`
* Fixed - Suffix: `-fixed`: Maintains default unit (`$default-space`)
* Large - Suffix: `-lg`: 2x the default unit (`$default-space` * 2) above `$bp-space` and default unit (`$default-space`) below `$bp-space`
* Large (fixed) - Suffix: `-lg-fixed`:  Maintains 2x default unit (`$default-space` * 2)
* Small - Suffix: `-sm`: .5 the default unit (`$default-space` * .5)
* Tiny - Suffix: `-tiny`: .25 the default unit (`$default-space` * .25)

```demo.html

<div class="u-space-sections">
	<div>
		•••
	</div>
	<div>
		•••
	</div>
</div>

```

```small.html

<div class="u-space-sections@small">
	<div>
		•••
	</div>
	<div>
		•••
	</div>
</div>

```

```large.html

<div class="u-space-sections@large">
	<div>
		•••
	</div>
	<div>
		•••
	</div>
</div>

```

```fixed.html

<div class="u-space-sections-fixed">
	<div>
		•••
	</div>
	<div>
		•••
	</div>
</div>

```

```2x.html

<div class="u-space-sections-lg">
	<div>
		•••
	</div>
	<div>
		•••
	</div>
</div>

```

```2x-fixed.html

<div class="u-space-sections-lg-fixed">
	<div>
		•••
	</div>
	<div>
		•••
	</div>
</div>

```

```half.html

<div class="u-space-sections-sm">
	<div>
		•••
	</div>
	<div>
		•••
	</div>
</div>

```

```tiny.html

<div class="u-space-sections-tiny">
	<div>
		•••
	</div>
	<div>
		•••
	</div>
</div>

*/


.u-space-sections {
	@include suffixcate {
		> * + * {
			@include units($property: "margin", $variation: (top: true));
		}
	}

	&-lg {
		@include suffixcate {
			> * + * {
				@include units($property: "padding", $version: "two-times", $variation: (top: true));
			}
		}

		&-fixed {
			@include suffixcate {
				> * + * {
					margin-top: $default-space * 2;
				}
			}
		}
	}

	&-fixed {
		@include suffixcate {
			> * + * {
				margin-top: $default-space;
			}
		}
	}

	&-sm {
		@include suffixcate {
			> * + * {
				@include units($property: "padding", $version: "half-sized", $variation: (top: true));
			}
		}
	}

	&-tiny {
		@include suffixcate {
			> * + * {
				margin-top: $default-space / 4;
			}
		}
	}
}


/*
---
name: Space Sections (Alt)
category: 6. Trumps > Spacing Units
---

Space sections next to eachother using `margin`, can be applied to all elements

*  Contains [Suffixcate](/#suffixcate) options (`@small` and `@large` suffixes) for `Default`, `Fixed`, `Large`, and `Large (fixed)`.

Versions:
* Default - Default unit (`$default-space`) above `$bp-space` and .5 the default unit (`$default-space` * .5) below `$bp-space`
* Fixed - Suffix: `-fixed`: Maintains default unit (`$default-space`)
* Large - Suffix: `-lg`: 2x the default unit (`$default-space` * 2) above `$bp-space` and default unit (`$default-space`) below `$bp-space`
* Large (fixed) - Suffix: `-lg-fixed`:  Maintains 2x default unit (`$default-space` * 2)
* Small - Suffix: `-sm`: .5 the default unit (`$default-space` * .5)
* Tiny - Suffix: `-tiny`: .25 the default unit (`$default-space` * .25)

```demo.html

<div class="u-gutt-sections">
	<div>
		•••
	</div>
	<div>
		•••
	</div>
</div>

```

```small.html

<div class="u-gutt-sections@small">
	<div>
		•••
	</div>
	<div>
		•••
	</div>
</div>

```

```large.html

<div class="u-gutt-sections@large">
	<div>
		•••
	</div>
	<div>
		•••
	</div>
</div>

```

```fixed.html

<div class="u-gutt-sections-fixed">
	<div>
		•••
	</div>
	<div>
		•••
	</div>
</div>

```

```2x.html

<div class="u-gutt-sections-lg">
	<div>
		•••
	</div>
	<div>
		•••
	</div>
</div>

```

```2x-fixed.html

<div class="u-gutt-sections-lg-fixed">
	<div>
		•••
	</div>
	<div>
		•••
	</div>
</div>

```

```half.html

<div class="u-gutt-sections-sm">
	<div>
		•••
	</div>
	<div>
		•••
	</div>
</div>

```

```tiny.html

<div class="u-gutt-sections-tiny">
	<div>
		•••
	</div>
	<div>
		•••
	</div>
</div>

*/

.u-gutt-sections {
	@include suffixcate {
		> * + * {
			@include units($property: "margin", $variation: (top: true));
		}
	}

	&-lg {
		@include suffixcate {
			> * + * {
				@include units($property: "margin", $version: "two-times", $variation: (top: true));
			}
		}

		&-fixed {
			@include suffixcate {
				> * + * {
					margin-top: $default-space * 2;
				}
			}
		}
	}

	&-fixed {
		@include suffixcate {
			> * + * {
				margin-top: $default-space;
			}
		}
	}

	&-sm {
		@include suffixcate {
			> * + * {
				@include units($property: "margin", $version: "half-sized", $variation: (top: true));
			}
		}
	}

	&-tiny {
		@include suffixcate {
			> * + * {
				margin-top: $default-space / 4;
			}
		}
	}
}


// SETTINGS: Global variables, config switches
// @import "00-settings";

// TOOLS: Default mixin and functions
// @import "01-tools";

/*
---
name: Padding
category: 6. Trumps > Spacing Units
---

Default spacing unit is defined `$default-space` in `~/global/00-settings.scss`

*/

// padding
$variations-spacing: (top: 1, right: 2, bottom: 3, left: 4);
.u-space {
	@each $version, $number in $variations-spacing {
		&-#{$number} {
			@include suffixcate {
				@include units($variation: (#{$version}: true));
			}

			&-fixed {
				@include suffixcate {
					padding-#{$version}: $default-space;
				}
			}

			&-lg {
				@include suffixcate {
					@include units($version: "two-times", $variation: (#{$version}: true));
				}
			}

			&-lg-fixed {
				@include suffixcate {
					padding-#{$version}: $default-space * 2;
				}
			}

			&-sm {
				@include suffixcate {
					@include units($version: "half-sized", $variation: (#{$version}: true));
				}
			}

			&-sm-fixed {
				@include suffixcate {
					padding-#{$version}: $default-space / 2;
				}
			}

			&-tiny, &-tiny-fixed {
				@include suffixcate {
					padding-#{$version}: $default-space / 4;
				}
			}
		}
	}

	@include suffixcateExtend((".u-space-1"));
	@include suffixcateExtend((".u-space-2"));
	@include suffixcateExtend((".u-space-3"));
	@include suffixcateExtend((".u-space-4"));

	&-1-3 {
		@include suffixcateExtend((".u-space-1"));
		@include suffixcateExtend((".u-space-3"));


		&-tiny, &-tiny-fixed {
			@include suffixcateExtend((".u-space-1-tiny"));
			@include suffixcateExtend((".u-space-3-tiny"));
		}

		&-sm, &-sm-fixed {
			@include suffixcateExtend((".u-space-1-sm"));
			@include suffixcateExtend((".u-space-3-sm"));
		}

		&-fixed {
			@include suffixcateExtend((".u-space-1-fixed"));
			@include suffixcateExtend((".u-space-3-fixed"));
		}

		&-lg {
			@include suffixcateExtend((".u-space-1-lg"));
			@include suffixcateExtend((".u-space-3-lg"));
		}

		&-lg-fixed {
			@include suffixcateExtend((".u-space-1-lg-fixed"));
			@include suffixcateExtend((".u-space-3-lg-fixed"));
		}
	}

	&-2-4 {
		@include suffixcateExtend((".u-space-2"));
		@include suffixcateExtend((".u-space-4"));


		&-tiny, &-tiny-fixed {
			@include suffixcateExtend((".u-space-2-tiny"));
			@include suffixcateExtend((".u-space-4-tiny"));
		}

		&-sm, &-sm-fixed {
			@include suffixcateExtend((".u-space-2-sm"));
			@include suffixcateExtend((".u-space-4-sm"));
		}

		&-fixed {
			@include suffixcateExtend((".u-space-2-fixed"));
			@include suffixcateExtend((".u-space-4-fixed"));
		}

		&-lg {
			@include suffixcateExtend((".u-space-2-lg"));
			@include suffixcateExtend((".u-space-4-lg"));
		}

		&-lg-fixed {
			@include suffixcateExtend((".u-space-2-lg-fixed"));
			@include suffixcateExtend((".u-space-4-lg-fixed"));
		}
	}


	&-fixed {
		@include suffixcateExtend((".u-space-1-fixed"));
		@include suffixcateExtend((".u-space-2-fixed"));
		@include suffixcateExtend((".u-space-3-fixed"));
		@include suffixcateExtend((".u-space-4-fixed"));
	}

	&-lg {
		@include suffixcateExtend((".u-space-1-lg"));
		@include suffixcateExtend((".u-space-2-lg"));
		@include suffixcateExtend((".u-space-3-lg"));
		@include suffixcateExtend((".u-space-4-lg"));
	}

	&-lg-fixed {
		@include suffixcateExtend((".u-space-1-lg-fixed"));
		@include suffixcateExtend((".u-space-2-lg-fixed"));
		@include suffixcateExtend((".u-space-3-lg-fixed"));
		@include suffixcateExtend((".u-space-4-lg-fixed"));
	}

	&-sm {
		@include suffixcateExtend((".u-space-1-sm"));
		@include suffixcateExtend((".u-space-2-sm"));
		@include suffixcateExtend((".u-space-3-sm"));
		@include suffixcateExtend((".u-space-4-sm"));
	}

	&-sm-fixed {
		@include suffixcateExtend((".u-space-1-sm-fixed"));
		@include suffixcateExtend((".u-space-2-sm-fixed"));
		@include suffixcateExtend((".u-space-3-sm-fixed"));
		@include suffixcateExtend((".u-space-4-sm-fixed"));
	}

	&-tiny, &-tiny-fixed {
		@include suffixcateExtend((".u-space-1-tiny"));
		@include suffixcateExtend((".u-space-2-tiny"));
		@include suffixcateExtend((".u-space-3-tiny"));
		@include suffixcateExtend((".u-space-4-tiny"));
	}
}


/*
---
name: Margin
category: 6. Trumps > Spacing Units
---
*/

// Input can be used with `<input>` elements and all its types.
// 
// Types of labels:
// - Default: No classes
// - Disabled: No classes
// - Base: `.c-input`
// - Theme 1: `.t-form-1`
// - Theme 2: `.t-form-2`
// 
// ```default.html
// 	<label>Label</label>
// ```
// 
// ```base.html
// 	<label class="** c-label **">Label</label>
// ```
// 
// ```t-form-1.html
// 	<input class="** c-label ** t-form-1">Label</label>
// ```
// 
// ```t-form-2.html
// 	<input class="** c-label ** t-form-2">Label</label>
// 
// ```



.u-gutt {
	@each $version, $number in $variations-spacing {
		&-#{$number} {
			@include suffixcate {
				@include units($property: "margin", $variation: (#{$version}: true));
			}

			&-fixed {
				@include suffixcate {
					margin-#{$version}: $default-space;
				}
			}

			&-lg {
				@include suffixcate {
					@include units($property: "margin", $version: "two-times", $variation: (#{$version}: true));
				}
			}

			&-lg-fixed {
				@include suffixcate {
					margin-#{$version}: $default-space * 2;
				}
			}

			&-sm {
				@include suffixcate {
					@include units($property: "margin", $version: "half-sized", $variation: (#{$version}: true));
				}
			}

			&-sm-fixed {
				@include suffixcate {
					margin-#{$version}: $default-space / 2;
				}
			}

			&-tiny, &-tiny-fixed {
				@include suffixcate {
					margin-#{$version}: $default-space / 4;
				}
			}
		}
	}

	@include suffixcateExtend((".u-gutt-1"));
	@include suffixcateExtend((".u-gutt-2"));
	@include suffixcateExtend((".u-gutt-3"));
	@include suffixcateExtend((".u-gutt-4"));

	&-1-3 {
		@include suffixcateExtend((".u-gutt-1"));
		@include suffixcateExtend((".u-gutt-3"));


		&-tiny, &-tiny-fixed {
			@include suffixcateExtend((".u-gutt-1-tiny"));
			@include suffixcateExtend((".u-gutt-3-tiny"));
		}

		&-sm, &-sm-fixed {
			@include suffixcateExtend((".u-gutt-1-sm"));
			@include suffixcateExtend((".u-gutt-3-sm"));
		}

		&-fixed {
			@include suffixcateExtend((".u-gutt-1-fixed"));
			@include suffixcateExtend((".u-gutt-3-fixed"));
		}

		&-lg {
			@include suffixcateExtend((".u-gutt-1-lg"));
			@include suffixcateExtend((".u-gutt-3-lg"));
		}

		&-lg-fixed {
			@include suffixcateExtend((".u-gutt-1-lg-fixed"));
			@include suffixcateExtend((".u-gutt-3-lg-fixed"));
		}
	}

	&-2-4 {
		@include suffixcateExtend((".u-gutt-2"));
		@include suffixcateExtend((".u-gutt-4"));


		&-tiny, &-tiny-fixed {
			@include suffixcateExtend((".u-gutt-2-tiny"));
			@include suffixcateExtend((".u-gutt-4-tiny"));
		}

		&-sm, &-sm-fixed {
			@include suffixcateExtend((".u-gutt-2-sm"));
			@include suffixcateExtend((".u-gutt-4-sm"));
		}

		&-fixed {
			@include suffixcateExtend((".u-gutt-2-fixed"));
			@include suffixcateExtend((".u-gutt-4-fixed"));
		}

		&-lg {
			@include suffixcateExtend((".u-gutt-2-lg"));
			@include suffixcateExtend((".u-gutt-4-lg"));
		}

		&-lg-fixed {
			@include suffixcateExtend((".u-gutt-2-lg-fixed"));
			@include suffixcateExtend((".u-gutt-4-lg-fixed"));
		}
	}

	&-fixed {
		@include suffixcateExtend((".u-gutt-1-fixed"));
		@include suffixcateExtend((".u-gutt-2-fixed"));
		@include suffixcateExtend((".u-gutt-3-fixed"));
		@include suffixcateExtend((".u-gutt-4-fixed"));
	}

	&-lg {
		@include suffixcateExtend((".u-gutt-1-lg"));
		@include suffixcateExtend((".u-gutt-2-lg"));
		@include suffixcateExtend((".u-gutt-3-lg"));
		@include suffixcateExtend((".u-gutt-4-lg"));
	}

	&-lg-fixed {
		@include suffixcateExtend((".u-gutt-1-lg-fixed"));
		@include suffixcateExtend((".u-gutt-2-lg-fixed"));
		@include suffixcateExtend((".u-gutt-3-lg-fixed"));
		@include suffixcateExtend((".u-gutt-4-lg-fixed"));
	}

	&-sm {
		@include suffixcateExtend((".u-gutt-1-sm"));
		@include suffixcateExtend((".u-gutt-2-sm"));
		@include suffixcateExtend((".u-gutt-3-sm"));
		@include suffixcateExtend((".u-gutt-4-sm"));
	}

	&-sm-fixed {
		@include suffixcateExtend((".u-gutt-1-sm-fixed"));
		@include suffixcateExtend((".u-gutt-2-sm-fixed"));
		@include suffixcateExtend((".u-gutt-3-sm-fixed"));
		@include suffixcateExtend((".u-gutt-4-sm-fixed"));
	}

	&-tiny, &-tiny-fixed {
		@include suffixcateExtend((".u-gutt-1-tiny"));
		@include suffixcateExtend((".u-gutt-2-tiny"));
		@include suffixcateExtend((".u-gutt-3-tiny"));
		@include suffixcateExtend((".u-gutt-4-tiny"));
	}
}

/*
---
name: Offsets
category: 6. Trumps > Spacing Units
---
*/

// Input can be used with `<input>` elements and all its types.
// 
// Types of labels:
// - Default: No classes
// - Disabled: No classes
// - Base: `.c-input`
// - Theme 1: `.t-form-1`
// - Theme 2: `.t-form-2`
// 
// ```default.html
// 	<label>Label</label>
// ```
// 
// ```base.html
// 	<label class="** c-label **">Label</label>
// ```
// 
// ```t-form-1.html
// 	<input class="** c-label ** t-form-1">Label</label>
// ```
// 
// ```t-form-2.html
// 	<input class="** c-label ** t-form-2">Label</label>
// 
// ```



.u-offset {
	@each $version, $number in $variations-spacing {
		&-#{$number} {
			@include suffixcate {
				@include units($property: "margin", $version: "neg", $variation: (#{$version}: true));
			}

			&-fixed {
				@include suffixcate {
					margin-#{$version}: -$default-space;
				}
			}

			&-lg {
				@include suffixcate {
					@include units($property: "margin", $version: "two-times-neg", $variation: (#{$version}: true));
				}
			}

			&-lg-fixed {
				@include suffixcate {
					margin-#{$version}: -$default-space * 2;
				}
			}

			&-sm {
				@include suffixcate {
					@include units($property: "margin", $version: "half-sized-neg", $variation: (#{$version}: true));
				}
			}

			&-sm-fixed {
				@include suffixcate {
					margin-#{$version}: -$default-space / 2;
				}
			}

			&-tiny, &-tiny-fixed {
				@include suffixcate {
					margin-#{$version}: -$default-space / 4;
				}
			}
		}
	}

	@include suffixcateExtend((".u-offset-1"));
	@include suffixcateExtend((".u-offset-2"));
	@include suffixcateExtend((".u-offset-3"));
	@include suffixcateExtend((".u-offset-4"));

	&-1-3 {
		@include suffixcateExtend((".u-offset-1"));
		@include suffixcateExtend((".u-offset-3"));


		&-tiny, &-tiny-fixed {
			@include suffixcateExtend((".u-offset-1-tiny"));
			@include suffixcateExtend((".u-offset-3-tiny"));
		}

		&-sm, &-sm-fixed {
			@include suffixcateExtend((".u-offset-1-sm"));
			@include suffixcateExtend((".u-offset-3-sm"));
		}

		&-fixed {
			@include suffixcateExtend((".u-offset-1-fixed"));
			@include suffixcateExtend((".u-offset-3-fixed"));
		}

		&-lg {
			@include suffixcateExtend((".u-offset-1-lg"));
			@include suffixcateExtend((".u-offset-3-lg"));
		}

		&-lg-fixed {
			@include suffixcateExtend((".u-offset-1-lg-fixed"));
			@include suffixcateExtend((".u-offset-3-lg-fixed"));
		}
	}

	&-2-4 {
		@include suffixcateExtend((".u-offset-2"));
		@include suffixcateExtend((".u-offset-4"));


		&-tiny, &-tiny-fixed {
			@include suffixcateExtend((".u-offset-2-tiny"));
			@include suffixcateExtend((".u-offset-4-tiny"));
		}

		&-sm, &-sm-fixed {
			@include suffixcateExtend((".u-offset-2-sm"));
			@include suffixcateExtend((".u-offset-4-sm"));
		}

		&-fixed {
			@include suffixcateExtend((".u-offset-2-fixed"));
			@include suffixcateExtend((".u-offset-4-fixed"));
		}

		&-lg {
			@include suffixcateExtend((".u-offset-2-lg"));
			@include suffixcateExtend((".u-offset-4-lg"));
		}

		&-lg-fixed {
			@include suffixcateExtend((".u-offset-2-lg-fixed"));
			@include suffixcateExtend((".u-offset-4-lg-fixed"));
		}
	}

	&-fixed {
		@include suffixcateExtend((".u-offset-1-fixed"));
		@include suffixcateExtend((".u-offset-2-fixed"));
		@include suffixcateExtend((".u-offset-3-fixed"));
		@include suffixcateExtend((".u-offset-4-fixed"));
	}

	&-lg {
		@include suffixcateExtend((".u-offset-1-lg"));
		@include suffixcateExtend((".u-offset-2-lg"));
		@include suffixcateExtend((".u-offset-3-lg"));
		@include suffixcateExtend((".u-offset-4-lg"));
	}

	&-lg-fixed {
		@include suffixcateExtend((".u-offset-1-lg-fixed"));
		@include suffixcateExtend((".u-offset-2-lg-fixed"));
		@include suffixcateExtend((".u-offset-3-lg-fixed"));
		@include suffixcateExtend((".u-offset-4-lg-fixed"));
	}

	&-sm {
		@include suffixcateExtend((".u-offset-1-sm"));
		@include suffixcateExtend((".u-offset-2-sm"));
		@include suffixcateExtend((".u-offset-3-sm"));
		@include suffixcateExtend((".u-offset-4-sm"));
	}

	&-sm-fixed {
		@include suffixcateExtend((".u-offset-1-sm-fixed"));
		@include suffixcateExtend((".u-offset-2-sm-fixed"));
		@include suffixcateExtend((".u-offset-3-sm-fixed"));
		@include suffixcateExtend((".u-offset-4-sm-fixed"));
	}

	&-tiny, &-tiny-fixed {
		@include suffixcateExtend((".u-offset-1-tiny"));
		@include suffixcateExtend((".u-offset-2-tiny"));
		@include suffixcateExtend((".u-offset-3-tiny"));
		@include suffixcateExtend((".u-offset-4-tiny"));
	}
}


// SETTINGS: Global variables, config switches
@import "00-settings";

// TOOLS: Default mixin and functions
@import "01-tools";

// TRUMPS: Helpers and overrides
@import "_06-trumps_widths";
@import "_06-trumps_units";
@import "_06-trumps_glyphs";

.u-bg {
	&--cover, &--full, &--top, &--center {
		background-repeat: no-repeat;
	}

	&--cover {
		background-size: cover;
		background-position: center center;
	}

	&--full {
		background-size: 100% auto;
	}

	&--top {
		background-position: top center;
	}

	&--center {
		background-position: center center;
	}
}

.u-b {
	// &-light {
	// 	@include suffixcate {
	// 		
	// 	}
	// }

	// &-normal {
	// 	@include suffixcate {
	// 		
	// 	}
	// }

	// &-bold {
	// 	@include suffixcate {
	// 		
	// 	}
	// }

	// &-ultra {
	// 	@include suffixcate {
	// 		font-weight: $weight-ultra;
	// 	}
	// }
}

.u-lh {
	&-0 {
		@include suffixcate {
			line-height: 2em;
		}
	}

	&-1 {
		@include suffixcate {
			line-height: 1.5em;
		}
	}

	&-2 {
		@include suffixcate {
			line-height: 1em;
		}
	}

	&-3 {
		@include suffixcate {
			line-height: .9em;
		}
	}

	&-4 {
		@include suffixcate {
			line-height: .8em;
		}
	}

	&-5 {
		@include suffixcate {
			line-height: .5em;
		}
	}
}


.u-fs {
	&-1 {
		@include suffixcate {
			font-size: $h1;
		}
	}

	&-2 {
		@include suffixcate {
			font-size: $h2;
		}
	}

	&-3 {
		@include suffixcate {
			font-size: $h3;
		}
	}

	&-4 {
		@include suffixcate {
			font-size: $h4;
		}
	}

	&-5 {
		@include suffixcate {
			font-size: $h5;
		}
	}

	&-6 {
		@include suffixcate {
			font-size: $h6;
		}
	}


	&-1-alt {
		@include suffixcate {
			font-size: $em1;
		}
	}

	&-2-alt {
		@include suffixcate {
			font-size: $em2;
		}
	}

	&-3-alt {
		@include suffixcate {
			font-size: $em3;
		}
	}

	&-4-alt {
		@include suffixcate {
			font-size: $em4;
		}
	}

	&-5-alt {
		@include suffixcate {
			font-size: $em5;
		}
	}

	&-6-alt {
		@include suffixcate {
			font-size: $em6;
		}
	}



	&-before {
		&-1 {
			@include suffixcate {
				&:before {
					font-size: $h1;
				}
			}

			&-alt {
				@include suffixcate {
					&:before {
						font-size: $em1;
					}
				}
			}
		}

		&-2 {
			@include suffixcate {
				&:before {
					font-size: $h2;
				}
			}

			&-alt {
				@include suffixcate {
					&:before {
						font-size: $em2;
					}
				}
			}
		}

		&-3 {
			@include suffixcate {
				&:before {
					font-size: $h3;
				}
			}

			&-alt {
				@include suffixcate {
					&:before {
						font-size: $em3;
					}
				}
			}
		}

		&-4 {
			@include suffixcate {
				&:before {
					font-size: $h4;
				}
			}

			&-alt {
				@include suffixcate {
					&:before {
						font-size: $em4;
					}
				}
			}
		}

		&-5 {
			@include suffixcate {
				&:before {
					font-size: $h5;
				}
			}

			&-alt {
				@include suffixcate {
					&:before {
						font-size: $em5;
					}
				}
			}
		}

		&-6 {
			@include suffixcate {
				&:before {
					font-size: $h6;
				}
			}

			&-alt {
				@include suffixcate {
					&:before {
						font-size: $em6;
					}
				}
			}
		}
	}

	&-after {
		&-1 {
			@include suffixcate {
				&:after {
					font-size: $h1;
				}
			}

			&-alt {
				@include suffixcate {
					&:after {
						font-size: $em1;
					}
				}
			}
		}

		&-2 {
			@include suffixcate {
				&:after {
					font-size: $h2;
				}
			}

			&-alt {
				@include suffixcate {
					&:after {
						font-size: $em2;
					}
				}
			}
		}

		&-3 {
			@include suffixcate {
				&:after {
					font-size: $h3;
				}
			}

			&-alt {
				@include suffixcate {
					&:after {
						font-size: $em3;
					}
				}
			}
		}

		&-4 {
			@include suffixcate {
				&:after {
					font-size: $h4;
				}
			}

			&-alt {
				@include suffixcate {
					&:after {
						font-size: $em4;
					}
				}
			}
		}

		&-5 {
			@include suffixcate {
				&:after {
					font-size: $h5;
				}
			}

			&-alt {
				@include suffixcate {
					&:after {
						font-size: $em5;
					}
				}
			}
		}

		&-6 {
			@include suffixcate {
				&:after {
					font-size: $h6;
				}
			}

			&-alt {
				@include suffixcate {
					&:after {
						font-size: $em6;
					}
				}
			}
		}
	}
}


.u-offset-fs {
	&-6 {
		@include suffixcate {
			margin-top: -$h6;
		}
	}
}

.u-list {
	@include suffixcate {
		padding-left: 1rem;
	}
}

.u-unlist {
	@include suffixcate {
		@include unlist;
	}
}

.u-w {
	@include suffixcate {
		word-break: break-all;
	}
}

.u-nw {
	@include suffixcate {
		white-space: nowrap;
	}

	&-children {
		@include suffixcate {
			* {
				white-space: nowrap;
			}
		}
	}
}

.u-bw {
	@include suffixcate {
		word-break: break-all;
	}

	&-children {
		@include suffixcate {
			* {
				word-break: break-all;
			}
		}
	}
}

.u-va-t {
	@include suffixcate {
		vertical-align: top;
	}

	&-before {
		@include suffixcate {
			&:before {
				vertical-align: top;
			}
		}
	}

	&-after {
		@include suffixcate {
			&:after {
				vertical-align: top;
			}
		}
	}
}

.u-va-m {
	@include suffixcate {
		vertical-align: middle;
	}

	&-before {
		@include suffixcate {
			&:before {
				vertical-align: middle;
			}
		}
	}

	&-after {
		@include suffixcate {
			&:after {
				vertical-align: middle;
			}
		}
	}
}

.u-va-b {
	@include suffixcate {
		vertical-align: bottom;
	}

	&-before {
		@include suffixcate {
			&:before {
				vertical-align: bottom;
			}
		}
	}

	&-after {
		@include suffixcate {
			&:after {
				vertical-align: bottom;
			}
		}
	}
}

.u-dis-i {
	display: inline;
}

.u-dis-ib {
	@include suffixcate {
		display: inline-block;
	}
}

.u-dis-b {
	@include suffixcate($bp: $suffixcate_bp-all) {
		display: block;
	}
}

.u-dis-t {
	@include suffixcate {
		display: table;
	}
}

.u-dis-tc {
	@include suffixcate {
		display: table-cell;
	}
}


%display-hidden {
	@include suffixcate {
		display: none;
	}
}

%u-speak-none {
	@include suffixcate {
		speak: none;
	}
}

.u-speak-none {
	@extend %u-speak-none;

	&\@large {
		@extend %u-speak-none\@large !optional;
	}

	&\@small {
		@extend %u-speak-none\@small !optional;
	}
}

.u-dis-none {
	@extend %u-speak-none;
	@extend %display-hidden;

	@include suffixcate($bp: $suffixcate_bp-all, $all: true, $base: false) {
		speak: none;
		display: none;
	}
}

.u-a-l {
	@include suffixcate {
		text-align: left;
	}
}

.u-a-c {
	@include suffixcate($bp: $suffixcate_bp-all)  {
		text-align: center;
	}
}

.u-a-r {
	@include suffixcate {
		text-align: right;
	}
}
.u-a-j {
	@include suffixcate {
		text-align: justify;
	}
}

.u-emphasize {
	@include suffixcate {
		text-transform: uppercase;
	}
}

.u-strong, strong, b {
	
}

.u-italic {
	font-style: italic;
}

%clear-setup {
	clear: both;
}

%clear-after-setup {
	&:after {
		@extend %clear-setup;
		display: table;
		content: "";
	}
}

.o-clear {
	@extend %clear-setup;

	&-after {
		@extend %clear-after-setup;
	}
}

%f-r {
	float: right;
}

.u-f-r {
	@extend %f-r;

	&-children {
		@extend %clear-after-setup;

		> div, > li, > span {
			@extend %f-r;
		}
	}
}

%f-l {
	float: left;
}

.u-f-l {
	@extend %f-l;

	&-children {
		@extend %clear-after-setup;

		> div, > li, > span {
			@extend %f-l;
		}
	}
}

.u-full {
	@include suffixcate {
		width: 100%;
	}

	&-alt {
		@include suffixcate {
			max-width: 100%;
		}
	}

	&-alt-2 {
		@include suffixcate {
			min-width: 100%;
		}
	}
}

.u-clear {
	@include suffixcate {
		clear: both;
	}
}

img, textarea, span, label, aside, main {
	&.u-full {
		display: block;

		&\@large {
			@media screen and (min-width: $bp-large) {
				display: block;
			}
		}

		&\@small {
			@media screen and (max-width: $bp-large) {
				display: block;
			}
		}
	}
}

.u-font-primary {
	font-family: $primary-font;
}

.u-seconary-font {
	font-family: $seconary-font;
}

@mixin width-size-generator($value: 1, $bp: $bp-large, $type: percent, $width: false) {
	&-#{$value} {
		@if ($type==fixed) {
			@include suffixcate($bp: $suffixcate_bp-all) {
				width: $width / $value;
			}

			&-alt, &-max {
				@include suffixcate($bp: $suffixcate_bp-all) {
					max-width: $width / $value;
				}
			}

			&-alt-2, &-min {
				@include suffixcate($bp: $suffixcate_bp-all) {
					min-width: $width / $value;
				}
			}
		} @else {
			@include suffixcate($bp: $suffixcate_bp-all) {
				width: percentage(1 / $value);
			}

			&-alt, &-max {
				@include suffixcate($bp: $suffixcate_bp-all) {
					max-width: percentage(1 / $value);
				}
			}

			&-alt-2, &-min {
				@include suffixcate($bp: $suffixcate_bp-all) {
					min-width: percentage(1 / $value);
				}
			}
		}
	}
}


.u-round {
	border-radius: 50%;
	overflow: hidden;
}

.u-size {
	@for $i from 1 through 12 {
		@include width-size-generator($i, $type: percent);

		&-fixed {
			@include width-size-generator($i, $type: fixed, $width: $max-width);
		}

		&-fixed-sm {
			@include width-size-generator($i, $type: fixed, $width: $bp-large);
		}
	}

	&-sm {
		max-width: 1em;
		max-height: 1em;
	}

	&-cta {
		min-width: rem(40);
		min-height: rem(40);
	}
}

.u-width {
	&-0 {
		@include suffixcate($bp: $suffixcate_bp-all) {
			width: rem(40);
		}

		&-max {
			@include suffixcate($bp: $suffixcate_bp-all) {
				max-width: rem(40);
			}
		}

		&-min {
			@include suffixcate($bp: $suffixcate_bp-all) {
				min-width: rem(40);
			}
		}
	}

	&-1 {
		@include suffixcate($bp: $suffixcate_bp-all) {
			width: rem(50);
		}

		&-max {
			@include suffixcate($bp: $suffixcate_bp-all) {
				max-width: rem(50);
			}
		}

		&-min {
			@include suffixcate($bp: $suffixcate_bp-all) {
				min-width: rem(50);
			}
		}
	}

	&-2 {
		@include suffixcate($bp: $suffixcate_bp-all) {
			width: rem(75);
		}

		&-max {
			@include suffixcate($bp: $suffixcate_bp-all) {
				max-width: rem(75);
			}
		}

		&-min {
			@include suffixcate($bp: $suffixcate_bp-all) {
				min-width: rem(75);
			}
		}
	}

	&-3 {
		@include suffixcate($bp: $suffixcate_bp-all) {
			width: rem(100);
		}

		&-max {
			@include suffixcate($bp: $suffixcate_bp-all) {
				max-width: rem(100);
			}
		}

		&-min {
			@include suffixcate($bp: $suffixcate_bp-all) {
				min-width: rem(100);
			}
		}
	}

	&-4 {
		@include suffixcate($bp: $suffixcate_bp-all) {
			width: rem(200);
		}

		&-max {
			@include suffixcate($bp: $suffixcate_bp-all) {
				max-width: rem(200);
			}
		}

		&-min {
			@include suffixcate($bp: $suffixcate_bp-all) {
				min-width: rem(200);
			}
		}
	}

	&-5 {
		@include suffixcate($bp: $suffixcate_bp-all) {
			width: rem(300);
		}

		&-max {
			@include suffixcate($bp: $suffixcate_bp-all) {
				max-width: rem(300);
			}
		}

		&-min {
			@include suffixcate($bp: $suffixcate_bp-all) {
				min-width: rem(300);
			}
		}
	}

	&-6 {
		@include suffixcate($bp: $suffixcate_bp-all) {
			width: rem(420);
		}

		&-max {



			@include suffixcate($bp: $suffixcate_bp-all) {
				max-width: rem(420);
			}
		}

		&-min {
			@include suffixcate($bp: $suffixcate_bp-all) {
				min-width: rem(420);
			}
		}
	}

	&-1-alt {
		@include suffixcateExtend(('.u-width-1-max'));
	}

	&-2-alt {
		@include suffixcateExtend(('.u-width-2-max'));
	}

	&-3-alt {
		@include suffixcateExtend(('.u-width-3-max'));
	}

	&-4-alt {
		@include suffixcateExtend(('.u-width-4-max'));
	}

	&-5-alt {
		@include suffixcateExtend(('.u-width-5-max'));
	}

	&-6-alt {
		@include suffixcateExtend(('.u-width-6-max'));
	}

	&-1-alt-2 {
		@include suffixcateExtend(('.u-width-1-min'));
	}

	&-2-alt-2 {
		@include suffixcateExtend(('.u-width-2-min'));
	}

	&-3-alt-2 {
		@include suffixcateExtend(('.u-width-3-min'));
	}

	&-4-alt-2 {
		@include suffixcateExtend(('.u-width-4-min'));
	}

	&-5-alt-2 {
		@include suffixcateExtend(('.u-width-5-min'));
	}

	&-6-alt-2 {
		@include suffixcateExtend(('.u-width-6-min'));
	}
}

.u-date-width {
	@include suffixcate($bp: $suffixcate_bp-all) {
		max-width: rem(142);
	}
}

.u-auto-t {
	@include suffixcate($bp: $suffixcate_bp-all) {
		margin-top: auto;
	}
}

.u-auto-r {
	@include suffixcate($bp: $suffixcate_bp-all) {
		margin-right: auto;
	}
}

.u-auto-b {
	@include suffixcate($bp: $suffixcate_bp-all) {
		margin-bottom: auto;
	}
}

.u-auto-l {
	@include suffixcate($bp: $suffixcate_bp-all) {
		margin-left: auto;
	}
}

.u-center {
	@include suffixcateExtend(('.u-auto-r'));
	@include suffixcateExtend(('.u-auto-l'));
}

.u-vis-0 {
	@include suffixcate {
		position: absolute;
		top: -3125rem;
		left: -3125rem;
		font-size: 0;
		height: 0;
		width: 0;
		overflow: hidden;
		visibility: none;
	}
}

.u-hidden {
	@extend %display-hidden;

	&\@large {
		@extend %display-hidden\@large !optional;
	}

	&\@small {
		@extend %display-hidden\@small !optional;
	}
}

@mixin bracket-styles {
	position: relative;

	&:before {
		font-size: 1em;
		display: inline-block;
		content: "|";
		position: absolute;
		top: 50%;
		transform: translateY(-50%);
		left: 0;
	}
}

.u-divider {
	&__child ~ .u-divider__child {
		@include bracket-styles
	}
}

.u-divider\@large {
	&__child ~ .u-divider\@large__child {
		@media screen and (min-width: $bp-large) {
			@include bracket-styles
		}
	}
}

.u-divider\@small {
	&__child ~ .u-divider\@small__child {
		@media screen and (max-width: $bp-large) {
			@include bracket-styles
		}
	}
}

.u-zone-sections {
	@include suffixcate {
		&__section {
			& + & {
				border-top: 1px solid;
			}
		}
	}

	@include suffixcate {
		&--extended {
			border-top: 1px solid;
			// border-bottom: 1px solid;
		}
	}
}

.t-body-style {
	background-color: #FFF;
}

.o-sections__section > .u-space-children {
	@include units($property: "margin", $version: "neg", $variation: (top: true));
}

%u-char-glyph {
	@include glyph;
}

%u-char-glyph-default {
	width: rem(40);
	text-align: center;
}

.u-td-none {
	text-decoration: none;
}

.u-td {
	text-decoration: underline;
}

.u-shadow {
	@include suffixcate {
		box-shadow: 0 rem(1) rem(2) rgba(0,0,0,.075), 0 rem(-1) rem(2) rgba(255,255,255,.05);
	}
}


a {
	&:hover, &:active {
		.u-data-title-button:before, .u-data-title-button:after {
			// background-color: $button-bg-hover;
			background-color: rgba(255,255,255,.7);
		}
	}

	&:active {
		.u-data-title-button:before, .u-data-title-button:after {
			// background-color: $button-bg-active;
		}
	}
}


$u-outline-styles-base: 1px solid;
$u-outline-styles: ($default-space / 2) solid #FFF;
.u-outline {
	&-1 {
		@include suffixcate {
			border-top: $u-outline-styles;
		}
	}

	&-2 {
		@include suffixcate {
			border-right: $u-outline-styles;
		}
	}

	&-3 {
		@include suffixcate {
			border-bottom: $u-outline-styles;
		}
	}

	&-4 {
		@include suffixcate {
			border-left: $u-outline-styles;
		}
	}

	@include suffixcateExtend((".u-outline-1", ".u-outline-2", ".u-outline-3", ".u-outline-4"));

	&-1-3 {
		@include suffixcateExtend((".u-outline-1", ".u-outline-3"));
	}

	&-2-4 {
		@include suffixcateExtend((".u-outline-2", ".u-outline-4"));
	}
}


%u-border-color {
	@each $color, $values in $palette {
		&--#{$color} {
			@include suffixcate {
				border-color: unquote(nth($values, 1));
			}
		}
	}
}

%u-border-xlg {
	@include suffixcate {
		@media screen and (min-width: $bp-spaces) {
			border-width: rem(10) !important;
		}

		@media screen and (max-width: $bp-spaces) {
			border-width: rem(5) !important;
		}
	}
}

.u-border {
	&-1 {
		@include suffixcate {
			border-top: $u-outline-styles-base;
		}

		&-xlg {
			@include suffixcateExtend(('%u-border-xlg'));
		}
	}

	&-2 {
		@include suffixcate($bp: $suffixcate_bp-all) {
			border-right: $u-outline-styles-base;
		}

		&-xlg {
			@include suffixcateExtend(('%u-border-xlg'));
		}
	}

	&-3 {
		@include suffixcate {
			border-bottom: $u-outline-styles-base;
		}

		&-xlg {
			@include suffixcateExtend(('%u-border-xlg'));
		}
	}

	&-4 {
		@include suffixcate {
			border-left: $u-outline-styles-base;
		}

		&-xlg {
			@include suffixcateExtend(('%u-border-xlg'));
		}
	}

	@include suffixcateExtend((".u-border-1", ".u-border-2", ".u-border-3", ".u-border-4"));

	&-1-3 {
		@include suffixcateExtend((".u-border-1", ".u-border-3"));
	}

	&-2-4 {
		@include suffixcateExtend((".u-border-2", ".u-border-4"));
	}

	&-lg {
		@include suffixcateExtend((".u-border-1", ".u-border-2", ".u-border-3", ".u-border-4"));

		@include suffixcate {
			border-width: rem(4);
		}
	}

	&-xlg {
		@include suffixcateExtend((".u-border-1-xlg", ".u-border-2-xlg", ".u-border-3-xlg", ".u-border-4-xlg"));
	}

	@each $color, $values in $palette {
		@include suffixcate {
			&--#{$color} {
				border-color: unquote(nth($values, 1));
			}
		}
	}

	&-children {
		@include suffixcate {
			> * + * {
				border-left: $u-outline-styles-base;
			}

			@each $color, $values in $palette {
				&--#{$color} {
					> * + * {
						border-color: unquote(nth($values, 1)) !important;
					}
				}
			}
		}

		&-xlg {
			@include suffixcateExtend(('.u-border-children'));
			@include suffixcate {
				> * + * {
					@media screen and (min-width: $bp-spaces) {
						border-width: rem(10);
					}

					@media screen and (max-width: $bp-spaces) {
						border-width: rem(5);
					}
				}
			}
		}
	}

	&-sections {
		@include suffixcate {
			> * + * {
				border-top: $u-outline-styles-base;
			}

			@each $color, $values in $palette {
				&--#{$color} {
					> * + * {
						border-color: unquote(nth($values, 1)) !important;
					}
				}
			}
		}


		&-lg {
			@include suffixcateExtend(('.u-border-sections'));
			@include suffixcate {
				> * + * {
					border-top-width: rem(2);
				}
			}
		}


		&-xlg {
			@include suffixcateExtend(('.u-border-sections'));
			@include suffixcate {
				> * + * {
					@media screen and (min-width: $bp-spaces) {
						border-width: rem(10);
					}

					@media screen and (max-width: $bp-spaces) {
						border-width: rem(5);
					}
				}
			}
		}
	}


	&-rows {
		@include suffixcate {
			&__row ~ &__row {
				border-top: $u-outline-styles-base;
			}

			@each $color, $values in $palette {
				&--#{$color} > &__row {
					border-color: unquote(nth($values, 1));
				}
			}
		}
	}
}

.u-text-shad {
	text-shadow: 0 0 rem(50) rgba($color-secondary-dark,.6), 0 0 rem(5) rgba($color-secondary-dark,.2);
}


.u-radius-tr {
	@include suffixcate {
		border-top-right-radius: rem(3);
	}
}

.u-radius-br {
	@include suffixcate {
		border-bottom-right-radius: rem(3);
	}
}

.u-radius-bl {
	@include suffixcate {
		border-bottom-left-radius: rem(3);
	}
}

.u-radius-tl {
	@include suffixcate {
		border-top-left-radius: rem(3);
	}
}

.u-radius {
	@include suffixcateExtend(('.u-radius-tr', '.u-radius-br', '.u-radius-bl', '.u-radius-tl'));

	&-lg {
		border-radius: rem(28);
	}
}

.u-fat {
	font-weight: bold;
}

.u-min-click {
	min-width: 40px;
	min-height: 40px;
}

.u-disable-select {
	@include disable-select;
}

.u-o-f, .u-of-cover, u-object-fit-cover {
	object-fit: cover;
}


@import "06-trumps_global-only";
@import "06-trumps-browsers";
@import "06-trumps_positioning";
@import "06-trumps-ie-fixes";


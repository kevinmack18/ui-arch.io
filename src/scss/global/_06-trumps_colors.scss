@mixin makeColorHelpers($color, $value, $contrast-value) {
	$contrast-color: if($contrast-value = false, $contrast-value, true);

	%u-#{$color} {
		@include suffixcate {
			color: unquote($value);
		}
    }

	.u-#{$color}, .u-color-#{$color}, .u-#{$color}-before:before, .u-color-#{$color}-before:before, .u-#{$color}-after:after, .u-color-#{$color}-after:after {
		@include suffixcate {
			color: unquote($value);
		}
    }

    %u-#{$color}-bg {
    	@include suffixcate {
			background-color: unquote($value);
		}
    }

    .u-#{$color}-bg, .u-color-#{$color}-bg, .u-bg-#{$color}, .u-#{$color}-bg-before:before, .u-color-#{$color}-bg-before:before, .u-#{$color}-bg-after:after, .u-color-#{$color}-bg-after:after {
    	@include suffixcate {
	        background-color: unquote($value);
		}
    }

    .u-#{$color}-bg {
    	@include suffixcate {
			@if ($contrast-color != false) {
				color: unquote($contrast-color);
			}
		}
    }
}

.u-stripe {
	@include suffixcateExtend(('.u-dark-light-bg'));

	@include suffixcate {
		&:nth-child(odd) {
			background-color: $color-light;
			color: $color-light-contrast;
		}
	}
}

.u-stripe-alt {
	@include suffixcate {
		&__item:nth-child(even) {
			// background-color: $color-light;
			// color: $color-light-contrast;
			background-color: $color-light-light;
			color: $color-light-light-contrast;
		}

		&__item:nth-child(odd) {
			background-color: $color-dark-light;
			color: $color-dark-light-contrast;
		}
	}
}

@each $color, $values in $palette {
	@if (length($values) > 1) {
		@include makeColorHelpers($color, nth($values, 1), nth($values, 2));
	} @else {
		@include makeColorHelpers($color, nth($values, 1), false);
	}
}

.u-success-bg {
	@include suffixcateExtend((".u-accent-accent-bg"));
}

.u-gradient-primary-bg {
	background: $light-gradient-primary;
	background-size: cover;
}


.u-alpha {
	@include suffixcate {
		background-color: rgba($color-light-light, .85);
	}
}

.t-alpha {
	@include suffixcateExtend((".u-alpha", ".u-dark"));
}

.t-alpha-2 {
	@include suffixcateExtend((".u-dark"));

	@include suffixcate {
		background-color: rgba($color-light-light, .6);
	}
}


.t-1, .t-dark {
	background-color: $color-secondary-dark;
	color: $color-secondary-dark-contrast;

	[class*="-header"] {
		color: $color-light-light;
	}
	
	[class*="-subheader"] {
		color: $color-primary-accent;
	}
}

.t-2 {
	background-color: $color-secondary;
	color: $color-secondary-contrast;

	[class*="-header"] {
		color: $color-light-light;
	}
	
	[class*="-subheader"] {
		color: $color-accent-accent;
	}
}

.t-3 {
	background-color: $color-primary;
	color: $color-primary-contrast;

	[class*="-header"] {
		color: $color-secondary-dark;
	}
	
	[class*="-subheader"] {
		color: $color-light-accent;
	}
}

.t-4 {
	background-color: $color-primary-accent;
	color: $color-primary-accent-contrast;

	[class*="-header"] {
		color: $color-light-light;
	}
	
	[class*="-subheader"] {
		color: $color-secondary-dark;
	}
}

.t-5 {
	background-color: $color-light-light;
	color: $color-light-light-contrast;

	[class*="-header"] {
		color: $color-secondary;
	}
	
	[class*="-subheader"] {
		color: $color-secondary-accent;
	}
}

.t-6, .t-light {
	background-color: $color-light-light;
	color: $color-light-light-contrast;

	[class*="-header"] {
		color: $color-primary;
	}
	
	[class*="-subheader"] {
		color: $color-secondary-dark;
	}
}





// .t-1, .t-light {
// 	@include suffixcateExtend((".u-dark-light-bg", ".u-dark"));
// }

// .t-2, .t-dark {
// 	@include suffixcateExtend((".u-dark-bg", ".u-light-light"));
// }

// .t-3 {
// 	@include suffixcateExtend((".u-accent-dark-bg", ".u-light-light"));
// }

// .t-4 {
// 	@include suffixcateExtend((".u-secondary-bg", ".u-light-light"));
// }


@mixin placeholder-styles-1 {
	color: $color-placeholder;
	line-height: 1;
	vertical-align: middle;
}

@mixin placeholder-setup-1 {
	&::-webkit-input-placeholder {
	   @include placeholder-styles-1;
	}

	&:-moz-placeholder {
	   @include placeholder-styles-1;
	}

	&::-moz-placeholder {
	   @include placeholder-styles-1;
	}

	&:-ms-input-placeholder {
	   @include placeholder-styles-1;
	}
}

.t-form-1  {
	&.c-label {
		color: $color-secondary;
	}

	&.c-select {
		.c-select__text {
			&:after {
				color: $color-primary;
			}

			&:active, &:hover {
				color: $color-primary-accent;
			}

			&:active {
				color: $color-primary-dark;
			}
		}
	}

	&.c-input, &.c-textarea, &.c-select, &.c-datepicker {
		background-color: $color-light-light;
		border-color: transparent;
		border-bottom-color: $color-light-dark;
		color: $color-dark;

		&:focus {
			border-bottom-color: $color-secondary-accent;
			color: $color-dark-dark;
		}
	}

	.u-char-before__item:after, .u-char-after__item:after {
		color: $color-dark-dark;
	}

	&.c-input, &.c-textarea {
		// border-color: red !important;
		
		@include placeholder-setup-1;
	}

	.c-field-toggle {
		&__input {

			&:checked + .c-field-toggle__text, &:checked + .c-field-toggle__label {
				color: $color-dark-dark;
			}

			&:focus + .c-field-toggle__text, &:active + .c-field-toggle__text, , &:active + .c-field-toggle__label {
				color: $color-secondary;
				&:before {
					border-color: $color-secondary-light;
				}
			}

			&[disabled]:checked + .c-field-toggle__text, [disabled]:checked + .c-field-toggle__label {
				color: $color-light-dark;
			}
		}

		&__text, &__label {
			color: $color-dark;

			&:after {
				color: $color-secondary;
			}

			&:before {
				background-color: $color-light-light;
				border-color: $color-light-dark;
			}

			&:hover, &:focus {
				color: $color-dark-dark;
			}
		}
	}

	&.c-input[disabled], & > .c-checkbox__input[disabled] + label:before, & > .c-radio__input[disabled] + label:before, &.c-textarea[disabled], &.c-select[disabled], &.c-select > select[disabled], &.c-datepicker[disabled], &.c-radio > input[disabled] + label:before {
		@include disable-select;
		cursor: default;
		cursor: not-allowed;
		background-color: darken($color-disabled, 10);

		opacity: .7;
	}

	& > .c-checkbox__input[disabled] + label:after, & > .c-radio__input[disabled] + label:after {
		color: darken($color-disabled, 20);
		text-shadow: 0 rem(1) 0 rgba(255,255,255,.1), 0 rem(-1) 0 rgba(0,0,0,.1);
	}

	&.u-light-light {
		color: $color-light-light;
	}
}

@mixin placeholder-styles-2 {
	color: $color-light;
}

@mixin placeholder-setup-2 {
	&::-webkit-input-placeholder {
	   @include placeholder-styles-2;
	}

	&:-moz-placeholder {
	   @include placeholder-styles-2;
	}

	&::-moz-placeholder {
	   @include placeholder-styles-2;
	}

	&:-ms-input-placeholder {
	   @include placeholder-styles-2;
	}
}

.t-form-2  {
	&.c-label {
		color: $color-dark;
	}

	&.c-input, &.c-textarea, &.c-select, &.c-select > select, &.c-datepicker {
		color: $color-light;

		&:focus {
			color: $color-light-light;
		}
	}

	&.c-input, &.c-textarea, &.c-select, &.c-datepicker {
		background-color: $color-dark;
		border-color: transparent;

		&:focus {
			border-bottom-color: $color-secondary-light;
		}
	}

	&.c-select {
		option {
			color: $color-light;
			background-color: $color-dark;
		}
	}

	.u-char-before__item:after, .u-char-after__item:after {
		color: $color-light-dark;
	}

	&.c-input, &.c-textarea {
		@include placeholder-setup-2;
	}

	.c-input-search__btn {
		box-shadow: rem(80) 0 0 rgba(0,0,0,.2) inset;

		&:active, &:hover, &:focus {
			box-shadow: none;
		}
	}

	.c-field-toggle {
		&__input {

			&:focus + .c-field-toggle__text, &:focus + .c-field-toggle__label {
				color: $color-secondary;
			}

			&:checked + .c-field-toggle__text, &:checked + .c-field-toggle__label{
				color: $color-dark-dark;
			}

			&[disabled]:checked + .c-field-toggle__text, &[disabled]:checked + .c-field-toggle__label {
				color: $color-light-dark;
			}
		}

		&__text, &__label {
			color: currentColor;

			&:after {
				color: $color-primary;
			}

			&:before {
				background-color: $color-dark;
				border-color: transparent;
			}

			&:hover, &:focus {
				color: $color-dark-dark;
			}
		}
	}


	&.c-input[disabled], &.c-textarea[disabled], &.c-select[disabled], &.c-select > select[disabled], &.c-datepicker[disabled], &.c-radio > input[disabled] + label:before {
		cursor: default;
		background-color: $color-dark;
		opacity: .7;
		@include disable-select;
	}
}

.t-form-light {
	&.c-label {
		color: $color-light-light;
	}
}
